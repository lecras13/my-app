{"version":3,"sources":["components/profile/profileInfo/ProfileInfo.module.css","components/profile/myPosts/MyPosts.module.css","components/profile/myPosts/post/Post.module.css","components/profile/profileInfo/ProfileStatus.jsx","components/profile/profileInfo/ProfileStatusWithHooks.jsx","components/profile/profileInfo/ProfileInfo.jsx","components/profile/myPosts/post/Post.jsx","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","userId","Preloader","Post","item","message","likesCount","maxLength30","maxLengthCreator","MyPosts","memo","postElements","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostElement","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","connect","state","profilePage","post","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.21208ed9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1ImF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__31H8M\",\"posts\":\"MyPosts_posts__3lbnY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3MB9Y\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"----\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../assets/common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*<div>\r\n                <img src='https://www.helmholtz.ai/fileadmin/HAICU/IMG/HMGU_AI_Keyvisual_quer_ohneText.jpg'/>\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <br></br>\r\n\r\n                <div>{props.profile.aboutMe}</div>\r\n\r\n                <div>{props.profile.contacts.facebook}</div>\r\n                <div>{props.profile.contacts.website}</div>\r\n                <div>{props.profile.contacts.vk}</div>\r\n                <div>{props.profile.contacts.twitter}</div>\r\n                <div>{props.profile.contacts.instagram}</div>\r\n                <div>{props.profile.contacts.youtube}</div>\r\n                <div>{props.profile.contacts.github}</div>\r\n                <div>{props.profile.contacts.mainLink}</div>\r\n\r\n                <div>{props.profile.lookingForAJob}</div>\r\n                <div>{props.profile.lookingForAJobDescription}</div>\r\n                <div>{props.profile.fullName}</div>\r\n                <div>{props.profile.userId}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://yt3.ggpht.com/a/AATXAJwP-Cll0SICtcx5Yyddhrkcl4RKJZNVtyu9vuQn=s900-c-k-c0x00ffffff-no-rj'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../assets/common/FormControls/FormControls\";\r\n\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostElement);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3> My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostElement\" validate={[required, maxLength30]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n                <button>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.post,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostElement) => {\r\n            dispatch(addPostActionCreator(newPostElement));\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./profileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>;\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n    /*WithAuthRedirect,*/\r\n)(ProfileContainer);"],"sourceRoot":""}